{"version":3,"sources":["context/AuthContext.js","components/Navbar.js","hooks/http.hook.js","components/Loader.js","pages/TokensPage.js","pages/Deploy.js","pages/Type.js","pages/AccountPage.js","pages/AuthPage.js","hooks/message.hook.js","pages/Contract.js","hooks/auth.hook.js","App.js","routes.js","serviceWorker.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Navbar","props","history","useHistory","auth","useContext","className","account","src","Identicon","toString","alt","id","onClick","event","push","preventDefault","ethBalance","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Loader","style","display","justifyContent","paddingTop","TokensPage","tokenId","useParams","tokens","setTokens","getTokens","Authorization","fetched","useEffect","token_id","content","templ","functions","t","n","length","k","Button","e","choice_","Number","target","innerHTML","split","class","Deploy","deployed","setDeployed","setAddress","window","M","updateTextFields","onSubmit_deploy","formData","web3","Web3","givenProvider","transactionConfirmationBlocks","contract","eth","Contract","params","forEach","element","deploy","arguments","send","from","then","newContractInstance","address","options","type_abi","type","dep","parse","schema","onSubmit","Type","onSubmit_sch","Abi","setState","Stage","Timetable","Escrow","Timeescrow","Min","Max","Min_max","Capped_min","Capped_max","Capped_min_max","List","Changerate","Pause","chosen","state","v","template","name","sch","this","Component","AccountPage","setAccount","setEthBalance","cr_token","setCrToken","getBlockchain","detectEthereumProvider","provider","ethereum","console","log","accounts","eth_Balance","parseInt","AuthPage","text","toast","html","handleSubmit","but","nativeEvent","submitter","Object","keys","key","password","disabled","sm_token","setToken","setType","getToken","form","temp_prop","d_stage","uiSchema","classNames","value","utils","toWei","getElementsByTagName","change_state","methods","call","result","isReached","on","receipt","toastHTML","storageName","App","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","getItem","useAuth","routes","path","exact","to","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c623cea4.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false\r\n})","import React, { useContext } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react' \r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nimport Identicon from 'identicon.js'\r\n\r\nexport const Navbar = (props) => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  \r\n  const handleLogout = event => {  \r\n    event.preventDefault()\r\n    auth.logout()\r\n    history.push('/')\r\n  }\r\n\r\n  const handleReturn = event => {  \r\n    history.push('/')\r\n  }\r\n  /* <div className='top' >\r\n            <h6 id=\"balance\">Balance: {props.ethBalance}</h6>\r\n            <div className=\"account\">\r\n            { props.account\r\n            ? <img\r\n              className=\"ml-2\"\r\n              src={`data:image/png;base64,${new Identicon(props.account, 30).toString()}`}\r\n              alt=\"\"\r\n            />\r\n            : <span></span>\r\n          }\r\n      <h6 id=\"account\">{props.account}</h6>\r\n            </div>\r\n        <Button onClick={handleLogout}>\r\n          Log out\r\n        </Button>\r\n        <Button onClick={handleReturn}>\r\n            Return to profile\r\n        </Button> <div className=\"account brand-logo\">\r\n      </div>\r\n      \r\n      \r\n      <li><h6 id=\"balance center-align\">Balance: {props.ethBalance}</h6></li>\r\n            <li><h6 id=\"account flex-end\">{props.account}</h6></li>*/\r\n\r\n  return (\r\n        <nav className=\"nav-extended\">\r\n        <div className=\"nav-wrapper  light-blue lighten-1\">\r\n            { props.account\r\n            ? <img\r\n              className=\"ml-2\"\r\n              src={`data:image/png;base64,${new Identicon(props.account, 30).toString()}`}\r\n              alt=\"\"\r\n            />\r\n            : <span></span>\r\n          }\r\n          \r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><a className=\"waves-effect waves-light white btn\" onClick={handleReturn}> Return to profile</a></li>\r\n          <li><a className=\"waves-effect waves-light white btn\" onClick={handleLogout}>Log out</a></li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"nav-content fluorescent blue\">\r\n        <h6 id=\"account flex-end\">Active account: {props.account}</h6>\r\n        <h6 id=\"balance center-align\">Balance: {props.ethBalance}</h6>  \r\n        </div>\r\n      </nav>   \r\n  )\r\n}\r\n","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Что-то пошло не так')\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n      return data\r\n    } catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return { loading, request, error, clearError }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n  <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)","import React, {useContext, useEffect, useState, useCallback} from \"react\"\r\nimport { Button } from 'semantic-ui-react' \r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {useHistory} from 'react-router-dom'\r\nimport '../style/TokensPage.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nexport const TokensPage = () => {\r\n  const history = useHistory()  \r\n  const tokenId = useParams().id\r\n  const {token} = useContext(AuthContext)\r\n  const {loading,request} = useHttp()\r\n  const [tokens, setTokens] = useState(null)\r\n\r\n  const getTokens = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/token/`, 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setTokens(fetched)\r\n    } catch (e) {}\r\n  }, [token, tokenId, request])\r\n\r\n  useEffect(() => {\r\n    getTokens()\r\n  }, [getTokens])\r\n  \r\n  let templ = [] \r\n  //choice_(Number(e.target.innerHTML.split('</i>')[1].split('T')[0]))-1)).innerText.split('</i>')\r\n  const functions = async() => {\r\n    let t = []\r\n    if(tokens != null){\r\n      let n = tokens.length\r\n      let k = n+1\r\n      while( n > 0 ) {\r\n        t.push(<Button className=\"waves-effect waves-light btn\" onClick={(e)=> choice_((Number(e.target.innerHTML.split('</i>')[1].split('T')[0]))-1)}>\r\n                 <i class=\"material-icons right\">attach_money</i>\r\n                  {k-(n)}Token: {tokens[n-1]['address']} with type: {tokens[n-1]['type_abi']}\r\n              </Button>)\r\n        n = n - 1 \r\n      }  \r\n    }\r\n    templ = t\r\n  }\r\n  let token_id\r\n\r\n  const choice_ = useCallback( async (n) => {\r\n    let k = tokens.length\r\n    token_id =  tokens[k-1-n]['_id']\r\n    try {\r\n      const fetched = await request(`/api/token/${token_id}`, 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      history.push(`/contract/${token_id}`)\r\n    } catch (e) {}\r\n  })\r\n\r\n  /*<div class=\"row\"></div>*/\r\n  let content\r\n  \r\n  if (loading) {\r\n    content = <Loader />\r\n  } else if (tokens) {\r\n    functions()\r\n    content = <div>\r\n                <span className=\"black-text\">Your tokens:</span>\r\n                <div className=\"container\">\r\n                   {templ}\r\n                </div>\r\n              </div>\r\n  }\r\n\r\n \r\n  return (\r\n    <div>\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useState, useContext, useEffect } from \"react\"\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Form from \"@rjsf/material-ui\"\r\nimport Web3 from 'web3'\r\n\r\n\r\n\r\nexport const Deploy = (props) => {\r\n    const history = useHistory()  \r\n    const auth = useContext(AuthContext)\r\n    const {request} = useHttp()\r\n\r\n    const [deployed, setDeployed] = useState(false)\r\n    const [address, setAddress] = useState(null)\r\n \r\n  \r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n\r\n    const onSubmit_deploy = async ({formData}) => {\r\n        let address\r\n        const web3 = new Web3(Web3.givenProvider,  null, { transactionConfirmationBlocks: 1});\r\n    \r\n        let contract = new web3.eth.Contract(props.data['abi'])\r\n        let params = []\r\n        props.params.forEach((element) => {\r\n          params.push(formData[element.toString()])\r\n        })\r\n        contract = await contract.deploy( { \r\n            data: props.data['bytecode'],\r\n            arguments: params\r\n        }).send({\r\n            from: props.account,\r\n        }).then(function(newContractInstance){\r\n            address = newContractInstance.options.address  \r\n        })\r\n        setAddress(address)\r\n        setDeployed(true) \r\n\r\n        const type_abi = props.type\r\n\r\n        try {\r\n            const data = await request('/api/token/deploy', 'POST', {address, type_abi}, {\r\n              Authorization: `Bearer ${auth.token}`\r\n            })\r\n            history.push('/')\r\n        } catch (e) { }\r\n    }\r\n\r\n    let content\r\n    let dep = `{\r\n      \"title\": \"Do you agree use that account for deploying?\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"Your account\": {\r\n          \"type\": \"string\",\r\n          \"title\": \"address\",\r\n          \"default\": \"${props.account}\"\r\n        },\r\n        \"Your balance\": {\r\n          \"type\": \"string\",\r\n          \"title\": \"balance\",\r\n          \"default\":\"${props.ethBalance}\"\r\n        }\r\n      }\r\n    }`\r\n    dep = JSON.parse(dep)\r\n\r\n    if (deployed === false) {\r\n      content = <Form schema={props.schema} onSubmit={onSubmit_deploy}/>\r\n    }\r\n    \r\n    return (\r\n      <div> \r\n        {content}\r\n      </div>\r\n    )\r\n}","import React, { Component } from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport {Deploy} from './Deploy.js'\r\n\r\nimport Form from \"@rjsf/material-ui\"\r\n\r\nimport sch from '../code_json/Schema.json'\r\nimport Stage from '../code_json/Stage.json'\r\nimport Timetable from '../code_json/Timetable.json'\r\nimport Escrow from '../code_json/Escrow.json'\r\nimport Timeescrow from '../code_json/Timeescrow.json'\r\nimport Min from '../code_json/Min.json'\r\nimport Pause from '../code_json/Pause.json'\r\nimport Max from '../code_json/Max.json'\r\nimport Min_max from '../code_json/Min_max.json'\r\nimport List from '../code_json/List.json'\r\nimport Capped_max from '../code_json/Capped_max.json'\r\nimport Capped_min from '../code_json/Capped_min.json'\r\nimport Capped_min_max from '../code_json/Capped_min_max.json'\r\nimport Changerate from '../code_json/Changerate.json'\r\n\r\nclass Type extends Component {\r\n    \r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        data:'',\r\n        chosen:'false',\r\n        type:'',\r\n        schema:'',\r\n        params:''\r\n      }\r\n    }\r\n\r\n    onSubmit_sch = ({formData}) => {\r\n        let Abi\r\n        if (formData['Stage']) {\r\n            this.setState({data: Stage})\r\n            this.setState({type: 'Stage'})\r\n            Abi = Stage['abi']\r\n        }\r\n        else if(formData['Timetable'] ) {\r\n            this.setState({data: Timetable})\r\n            this.setState({type: 'Timetable'})\r\n            Abi = Timetable['abi']\r\n        }\r\n        else if(formData['Escrow'] ) {\r\n            this.setState({data: Escrow})\r\n            this.setState({type: 'Escrow'})\r\n            Abi = Escrow['abi']\r\n        }\r\n        else if(formData['TimeEscrow'] ) {\r\n            this.setState({data: Timeescrow})\r\n            this.setState({type: 'TimeEscrow'})\r\n            Abi = Timeescrow['abi']\r\n        }\r\n        else if(formData['Min'] ) {\r\n            this.setState({data: Min})\r\n            this.setState({type: 'Min'})\r\n            Abi = Min['abi']\r\n        }\r\n        else if(formData['Max'] ) {\r\n            this.setState({data: Max})\r\n            this.setState({type: 'Max'})\r\n            Abi = Max['abi']\r\n        }\r\n        else if(formData['Min'] && formData['Max'] ) {\r\n            this.setState({data: Min_max})\r\n            this.setState({type: 'Min_max'})\r\n            Abi = Min_max['abi']\r\n        }\r\n        else if(formData['Min'] && formData['Max_Wei'] ) {\r\n            this.setState({data: Capped_min})\r\n            this.setState({type: 'Capped_min'})\r\n            Abi = Capped_min['abi']\r\n        }\r\n        else if(formData['Max_Wei'] && formData['Max'] ) {\r\n            this.setState({data: Capped_max})\r\n            this.setState({type: 'Capped_max'})\r\n            Abi = Capped_max['abi']\r\n        }\r\n        else if(formData['Min'] && formData['Max'] && formData['Max_Wei']) {\r\n            this.setState({data: Capped_min_max})\r\n            this.setState({type: 'Capped_min_max'})\r\n            Abi = Capped_min_max['abi']\r\n        }\r\n        else if(formData['Capped_min'] ) {\r\n            this.setState({data: Capped_min})\r\n            this.setState({type: 'Capped_min'})\r\n            Abi = Capped_min['abi']\r\n        }\r\n        else if(formData['Capped_max'] ) {\r\n            this.setState({data: Capped_max})\r\n            this.setState({type: 'Capped_max'})\r\n            Abi = Capped_max['abi']\r\n        }\r\n        else if(formData['List'] ) {\r\n            this.setState({data: List})\r\n            this.setState({type: 'List'})\r\n            Abi = List['abi']\r\n        }\r\n        else if(formData['Changerate'] ) {\r\n            this.setState({data: Changerate})\r\n            this.setState({type: 'Changerate'})\r\n            Abi = Changerate['abi']\r\n        }\r\n        else if(formData['Pause'] ) {\r\n            this.setState({data: Pause})\r\n            this.setState({type: 'Pause'})\r\n            Abi = Pause['abi']\r\n        }\r\n        this.deploy(Abi)\r\n        this.setState({chosen: 'true'})     \r\n    }\r\n    //for deploy\r\n    async deploy(Abi) {\r\n        let name\r\n        let v = []\r\n        let template = [] \r\n        Abi.forEach((element) => {\r\n            if(element[\"type\"] === \"constructor\"){\r\n                element['inputs'].forEach((element) => {\r\n                    name = element['name']\r\n                    template.push(\r\n                        `\"${name}\": {\r\n                        \"type\": \"string\",\r\n                        \"title\": \"${name}\"}`    \r\n                    )\r\n                  v.push(name)\r\n                })\r\n            }\r\n        })\r\n        let sch = `{\r\n            \"title\": \"Constructor\",\r\n            \"type\": \"object\",\r\n            \"properties\": {${template}}\r\n        }`\r\n    \r\n        this.setState({params:v})\r\n        this.setState({schema:JSON.parse(sch)})\r\n    }\r\n\r\n    render() {\r\n    let content \r\n\r\n    if (this.state.chosen === 'true') {\r\n        content = <Deploy   schema = {this.state.schema}\r\n                            params = {this.state.params}\r\n                            data = {this.state.data}\r\n                            type = {this.state.type}\r\n                            account = {this.props.account}\r\n                            ethBalance = {this.props.ethBalance}  /> \r\n    } else {\r\n        content = <Form schema={sch} onSubmit={this.onSubmit_sch}/>\r\n    }\r\n   \r\n    return (\r\n        <div> \r\n            {content}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Type;\r\n            \r\n                                                                                                                                                                                    ","import React, {useContext, useEffect, useState, useCallback } from 'react'\r\nimport { Button } from 'semantic-ui-react' \r\nimport {Navbar} from '../components/Navbar'\r\nimport {TokensPage} from './TokensPage'\r\n\r\n\r\nimport detectEthereumProvider from '@metamask/detect-provider'\r\nimport Type from './Type'\r\n\r\nexport const AccountPage = () => {\r\n    const [account, setAccount] = useState(null)\r\n    const [ethBalance, setEthBalance] = useState(null)\r\n    const [cr_token, setCrToken] = useState(false)\r\n\r\n    const handleCreate = () => {\r\n        setCrToken(true)\r\n    }\r\n    \r\n    const getBlockchain = async () => {\r\n        \r\n        const provider = await detectEthereumProvider();\r\n        \r\n        if (typeof window.ethereum !== 'undefined') {\r\n            console.log('MetaMask is installed!');\r\n        }\r\n\r\n        if (provider) {\r\n            await provider.request({method:'eth_requestAccounts'})\r\n        } else {\r\n            console.log('Please install MetaMask!');\r\n        }\r\n\r\n        const { ethereum } = window\r\n        \r\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\r\n        console.log(accounts)\r\n        setAccount(accounts[0])\r\n        \r\n        let params = [\r\n            account,\r\n            'latest'\r\n        ]\r\n        let eth_Balance = await ethereum.request({ method: 'eth_getBalance',\r\n                                                    params:params,\r\n                                                }); \r\n        \r\n        eth_Balance = parseInt(eth_Balance, 16)/(10**18);\r\n        setEthBalance(eth_Balance)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlockchain()\r\n      }, [getBlockchain])\r\n    //getBlockchain()\r\n    \r\n    let content \r\n    if( !cr_token ){\r\n        content = <div class=\"card-panel\">\r\n                    <Button className=\"waves-effect waves-light btn\" onClick={handleCreate}>\r\n                        Create New Token\r\n                    </Button>\r\n                    <TokensPage/>\r\n                </div>\r\n    } else {\r\n        content = <Type account={account}\r\n        ethBalance = {ethBalance}/>\r\n    } \r\n\r\n    return (\r\n        <div> \r\n            <Navbar account={account}\r\n                ethBalance = {ethBalance}/>\r\n            {content}\r\n        </div>\r\n    ) \r\n}\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {useMessage} from '../hooks/message.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport Form from \"@rjsf/bootstrap-4\"\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext)\r\n  const {loading, request, error, clearError} = useHttp()\r\n  const message = useMessage()\r\n\r\n  const handleSubmit = async (e,element) => {\r\n    let but = element.nativeEvent.submitter.className.split(\" \")[0]\r\n    let key = await Object.keys(e.formData)\r\n    let password = e.formData[key[1]]\r\n    let address = e.formData[key[0]] \r\n    if(but == 'reg') {\r\n      try {\r\n        console.log('here', password)\r\n        const data = await request('/api/auth/register', 'POST', {address, password})\r\n        message(data.message)\r\n      } catch (e) {}\r\n    } else {\r\n      try {\r\n        const data = await request('/api/auth/login', 'POST', {address, password})\r\n        auth.login(data.token, data.userId)\r\n      } catch (e) {}\r\n    } \r\n  }\r\n\r\n  useEffect(() => {\r\n    message(error)\r\n    clearError()\r\n  }, [error, message, clearError])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n  \r\n  const sch = `{\r\n    \"title\": \"Create or Log in account\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"address\": {\r\n        \"type\": \"string\",\r\n        \"title\": \"address\"\r\n      },\r\n     \"password\": {\r\n        \"type\": \"string\",\r\n        \"title\":\"password\"\r\n      }\r\n    }\r\n  }`\r\n\r\n  return (\r\n    <div> \r\n      <div className=\"col s6 offset-s3 card-panel blue-grey lighten-4\">\r\n        <Form schema={JSON.parse(sch)} onSubmit={handleSubmit} disabled = {false}>\r\n          <div>\r\n            <button type=\"submit\" className=\"reg waves-effect waves-light btn\">register</button>\r\n            <button type=\"submit\" className=\"login waves-effect waves-light btn\">log in</button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  ) \r\n}\r\n","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      console.log(text)\r\n      text = `<h5 class=\"black-text text-darken-2\">${text}</h5>`\r\n      window.M.toast({ html: text })\r\n    }\r\n  }, [])\r\n}","import React, { useState, useEffect, useContext, useCallback } from \"react\"\r\nimport { Button } from 'semantic-ui-react' \r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {Navbar} from '../components/Navbar'\r\n//import Modal from 'react-bootstrap/Modal'\r\n\r\nimport Web3 from 'web3'\r\nimport Form from \"@rjsf/material-ui\"\r\nimport Stage from '../code_json/Stage.json'\r\nimport Timetable from '../code_json/Timetable.json'\r\nimport Escrow from '../code_json/Escrow.json'\r\nimport Timeescrow from '../code_json/Timeescrow.json'\r\nimport Min from '../code_json/Min.json'\r\nimport Pause from '../code_json/Pause.json'\r\nimport Max from '../code_json/Max.json'\r\nimport Min_max from '../code_json/Min_max.json'\r\nimport List from '../code_json/List.json'\r\nimport Capped_max from '../code_json/Capped_max.json'\r\nimport Capped_min from '../code_json/Capped_min.json'\r\nimport Capped_min_max from '../code_json/Capped_min_max.json'\r\nimport Changerate from '../code_json/Changerate.json'\r\nimport d_stage from '../code_json/desciption/d_stage.json'\r\nimport detectEthereumProvider from '@metamask/detect-provider'\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nexport const Contract = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n\r\n    const [sm_token, setToken] = useState(null)\r\n    const tokenId = useParams().id\r\n    const [type, setType] = useState(null)\r\n    const [account, setAccount] = useState(null)\r\n    const [ethBalance, setEthBalance] = useState(null)\r\n\r\n    const getToken = useCallback(async () => {\r\n        try {\r\n          const fetched = await request(`/api/token/${tokenId}`, 'GET', null, {\r\n            Authorization: `Bearer ${token}`\r\n          })\r\n          setToken(fetched)\r\n          setType(fetched['type_abi'])\r\n        } catch (e) {}\r\n    }, [token, tokenId, request])\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        getToken()\r\n    }, [getToken])\r\n    \r\n    const getBlockchain = async () => {\r\n        \r\n        const provider = await detectEthereumProvider();\r\n        \r\n        if (typeof window.ethereum !== 'undefined') {\r\n            console.log('MetaMask is installed!');\r\n        }\r\n\r\n        if (provider) {\r\n            await provider.request({method:'eth_requestAccounts'})\r\n        } else {\r\n            console.log('Please install MetaMask!');\r\n        }\r\n\r\n        const { ethereum } = window\r\n        \r\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\r\n        setAccount(accounts[0])\r\n        \r\n        let params = [\r\n            account,\r\n            'latest'\r\n        ]\r\n        let eth_Balance = await ethereum.request({ method: 'eth_getBalance',\r\n                                                    params:params,\r\n                                                }); \r\n        \r\n        eth_Balance = parseInt(eth_Balance, 16)/(10**18);\r\n        setEthBalance(eth_Balance)\r\n    }\r\n   \r\n    let form = []\r\n    \r\n    const functions = async() => {\r\n        let Abi\r\n        console.log(sm_token)\r\n        if (type == 'Stage') {\r\n            Abi = Stage['abi']\r\n        }\r\n        else if(type === 'Timetable') {\r\n            Abi = Timetable['abi']\r\n        }\r\n        else if(type === 'Escrow' ) {\r\n            Abi = Escrow['abi'] \r\n        }\r\n        else if(type === 'TimeEscrow' ) {\r\n            Abi = Timeescrow['abi']\r\n        }\r\n        else if(type === 'Min' ) {\r\n            Abi = Min['abi']\r\n        }\r\n        else if( type === 'Max' ) {\r\n            Abi = Max['abi']\r\n        }\r\n        else if(type === 'Capped_min') {\r\n            Abi = Capped_min['abi']\r\n        }\r\n        else if(type === 'Capped_max') {\r\n            Abi = Capped_max['abi'] \r\n        }\r\n        else if(type === 'List') {\r\n            Abi = List['abi'] \r\n        }\r\n        else if(type === 'Changerate') {\r\n            Abi = Changerate['abi']\r\n        }\r\n        else if(type === 'Pause') {\r\n            Abi = Pause['abi'] \r\n        }\r\n        try {\r\n        let name\r\n        let uiSchema\r\n        let properties \r\n        let template = `{\"title\": ${name}, \r\n                     \"type\":\"object\", \r\n                     \"properties\":${properties}}`\r\n        let temp_prop = []\r\n        //const web3 = new Web3(Web3.givenProvider,  null, { transactionConfirmationBlocks: 1});\r\n        //let contract = new web3.eth.Contract(Stage['abi'], this.state.account)\r\n        console.log(type, Abi)\r\n        Abi.forEach((element) => {\r\n            if (element['type'] === 'function') {\r\n                if (JSON.stringify(element['inputs']) !== '[]') {\r\n                    element['inputs'].forEach((element) => {\r\n                        name = element['name'] \r\n                        temp_prop.push(`\"${name}\":{\"title\":\"${name}\", \"type\":\"string\"}`) \r\n                    }) \r\n                }\r\n                if( element[\"stateMutability\"] === \"payable\"){\r\n                    temp_prop.push(`\"ether_value\":{\"title\":\"ether_value\", \"type\":\"string\"}`) \r\n                }\r\n                name =  element['name']\r\n                template = `{\"title\": \"${name}\", \r\n                            \"type\":\"object\",\r\n                            \"description\":\"${d_stage[name]}\",\r\n                            \"properties\":{${temp_prop}}}`\r\n                temp_prop = []\r\n                uiSchema = {\r\n                    classNames: name//waves-effect waves-light\r\n                }\r\n                let shm = JSON.parse(template)\r\n            form.push(<Form schema = {JSON.parse(template)} uiSchema = {uiSchema} onSubmit = {onSubmit}> <button type=\"submit\" className=\"waves-effect waves-light btn light-blue lighten-4\">{name}<i class=\"material-icons right\">send</i></button></Form>)\r\n            } \r\n        }) } catch(e){\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    const onSubmit = async ({formData}, e) => {\r\n        let Abi\r\n        if (type == 'Stage') {\r\n            Abi = Stage['abi']\r\n        }\r\n        else if(type == 'Timetable') {\r\n            Abi = Timetable['abi']\r\n        }\r\n        else if(type == 'Escrow' ) {\r\n            Abi = Escrow['abi'] \r\n        }\r\n        else if(type == 'TimeEscrow' ) {\r\n            Abi = Timeescrow['abi']\r\n        }\r\n        else if(type == 'Min' ) {\r\n            Abi = Min['abi']\r\n        }\r\n        else if( type == 'Max' ) {\r\n            Abi = Max['abi']\r\n        }\r\n        else if(type == 'Capped_min') {\r\n            Abi = Capped_min['abi']\r\n        }\r\n        else if(type == 'Capped_max') {\r\n            Abi = Capped_max['abi'] \r\n        }\r\n        else if(type == 'List') {\r\n            Abi = List['abi'] \r\n        }\r\n        else if(type == 'Changerate') {\r\n            Abi = Changerate['abi']\r\n        }\r\n        else if(type == 'Pause') {\r\n            Abi = Pause['abi'] \r\n        }\r\n        let isReached\r\n        let value = '0'\r\n        let params = []\r\n        let x = Object.keys(formData).forEach((element) => { \r\n            if( element !== \"ether_value\") {\r\n                if (element !== \"_aim\") {\r\n                    params.push(formData[element])\r\n                }\r\n                else {\r\n                    params.push(Web3.utils.toWei(formData[element], 'ether'))\r\n                }\r\n            } else {\r\n                value = formData[element]\r\n            }\r\n        })\r\n        let method = e.target.getElementsByTagName('div')[0].getElementsByTagName('h5')[0]['innerText']//.classList[3] здесь получаешь доступ к названии функции\r\n        let change_state = 'false'\r\n        Abi.forEach((element) => {\r\n            if (element['name'] === method && element['type'] === 'function' && element['stateMutability'] !== 'pure' && element['stateMutability'] !== 'view') {\r\n                change_state = 'true'\r\n            } \r\n        })\r\n        const web3 = new Web3(Web3.givenProvider,  null, { transactionConfirmationBlocks: 1});\r\n        let contract = new web3.eth.Contract(Abi, sm_token['address'])\r\n        if ( change_state === 'false'){\r\n            await contract.methods[method](...params).call({from: account}).then(function(result){\r\n                isReached = result.toString()  \r\n            }) \r\n        } else {\r\n            await contract.methods[method](...params).send({from: account , value: Web3.utils.toWei(value, 'ether')}).on('receipt', function(receipt){\r\n                isReached = receipt.toString();\r\n            }).on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n                isReached = error.toString(); \r\n            })\r\n        }\r\n        let toastHTML = `<h5 class=\"black-text text-darken-2\">${method}:${isReached}</h5>`\r\n        window.M.toast({html: toastHTML }) \r\n    }\r\n    \r\n    functions()\r\n    getBlockchain()\r\n\r\n    let content\r\n\r\n    if (loading) {\r\n       content =  <Loader />\r\n    } else {\r\n        content = form\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <Navbar account={account}\r\n                   ethBalance = {ethBalance}/>\r\n            {content}            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n/* \r\n\r\n\r\n<Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{res_name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{res}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>*/","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [ready, setReady] = useState(false)\r\n  const [userId, setUserId] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) { // data.tokenid\r\n      login(data.token, data.userId)\r\n    }\r\n    setReady(true)\r\n  }, [login])\r\n\r\n\r\n  return { login, logout, token, userId, ready }\r\n}\r\n","import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from './routes'\nimport {useAuth} from './hooks/auth.hook'\nimport {AuthContext} from './context/AuthContext'\nimport {Loader} from './components/Loader'\nimport 'materialize-css'\n\nfunction App() {\n  const {  login, logout, token, userId, ready } = useAuth() \n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n\n  if (!ready) {\n    return <Loader />\n  }\n\n  return (\n    <Router>\n      <AuthContext.Provider value = {{\n        token, login, logout, userId, isAuthenticated \n      }}>\n        <Router>\n          { isAuthenticated}\n            <div className=\"container\">\n              {routes}\n            </div>\n        </Router>\n      </AuthContext.Provider> \n    </Router>\n  )\n}\n\nexport default App\n\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {AccountPage} from './pages/AccountPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {Contract} from './pages/Contract'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n\r\n  if (isAuthenticated) {//exact for access<Redirect to=\"/use\" /> \r\n    return (\r\n      <Switch>\r\n        <Route path=\"/account\" exact> \r\n          <AccountPage />\r\n        </Route>  \r\n        <Route path=\"/contract/:id\">\r\n          <Contract />\r\n        </Route>\r\n      <Redirect to=\"/account\" />\r\n      </Switch>\r\n    )\r\n  } \r\n   \r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n\n/*const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\nserviceWorker.unregister();"],"sourceRoot":""}